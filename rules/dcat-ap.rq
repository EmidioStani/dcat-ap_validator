PREFIX adms: <http://www.w3.org/ns/adms#>
PREFIX dcat: <http://www.w3.org/ns/dcat#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX spdx: <http://www.spdx.org/rdf/terms#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
WHERE{
# Rule_ID:0
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     FILTER(!EXISTS {?s foaf:name ?name}).
     BIND (rdf:type as ?p).
     BIND (foaf:Agent as ?o).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (0 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("Name is a required property for Agent." AS ?Rule_Description).
     BIND (concat("The agent  ",str(?o)," doesn't have a foaf:name property") AS ?Message).
   }
  }

UNION
# Rule_ID:1
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     ?s foaf:name ?o.
     FILTER(!isLiteral(?o)).
     BIND (foaf:name as ?p)
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (1 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("The foaf:name property should be a literal." AS ?Rule_Description).
     BIND (concat("The property ",str(?p)," is not a literal") AS ?Message).
   }
  }

UNION
# Rule_ID:2
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     FILTER(!EXISTS {?s dct:type ?type}).
     BIND (rdf:type AS ?p).
     BIND (foaf:Agent AS ?o).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (2 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("Type is a recommended property for Agent" AS ?Rule_Description).
     BIND (concat("The agent ",str(?o)," doesn't have a type property") AS ?Message).
   }
  }

UNION
# Rule_ID:3
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a foaf:Agent.
     ?s dct:type ?o.
     FILTER(!isUri(?o)).
     BIND (dct:type AS ?p)
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (3 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("Type should be a resource" AS ?Rule_Description).
     BIND (concat("The foaf:Agent ",str(?s)," should have a dct:type as rdf:resource") AS ?Message).
   }
  }

UNION
# Rule_ID:4
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dcat:dataset ?ds})).
     BIND(rdf:type AS ?p).
     BIND(dcat:Catalog AS ?o).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (4 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:dataset is a required property for Catalog" AS ?Rule_Description).
     BIND (concat("The dact:Catalog ",str(?o)," should have a dcat:dataset property") AS ?Message).
   }
  }

UNION
# Rule_ID:5
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dcat:dataset ?o.
     FILTER(!EXISTS {?o a dcat:Dataset}).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (5 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dcat:dataset should be a Dataset" AS ?Rule_Description).
     BIND (concat("The dcat:dataset ",str(?o)," does not exist.") AS ?Message).
   }
  }

UNION
# Rule_ID:6
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:description ?desc})).
     BIND(rdf:type AS ?p).
     BIND(dcat:Catalog AS ?o).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (6 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description is a required property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?s)," does not have a dct:description.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:7
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:description ?o.
     FILTER(!isLiteral(?o)).
     BIND (dct:description AS ?p).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (7 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:description should be a literal." AS ?Rule_Description).
     BIND (concat("The dct:description ",str(?o)," is not literal.") AS ?Message).
   }
  }
 
UNION
# Rule_ID:8
  {SELECT ?Rule_Origin ?Rule_ID ?Rule_Severity ?Rule_Description ?Message ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     FILTER(!(EXISTS { ?s dct:publisher ?pub})).
     BIND (rdf:type AS ?p).
     BIND (dcat:Catalog AS ?o).
     BIND ("DCAT-AP" AS ?Rule_Origin).
     BIND (8 AS ?Rule_ID).
     BIND ("error" AS ?Rule_Severity).
     BIND ("dct:publisher is a required property for Catalog." AS ?Rule_Description).
     BIND (concat("The dcat:Catalog ",str(?o)," does not have dct:publisher property.") AS ?Message).
   }
  }

UNION
# Rule_ID:9
  {SELECT ("DCAT-AP." AS ?Rule_Origin) (9 AS ?Rule_ID) ("error" AS ?Rule_Severity) ("dct:publisher has maximum cardinality of 1 for Catalog." AS ?Rule_Description") ( concat("The dcat:Catalog ",str(?o)," has more than 1 dct:publisher.") AS ?Message) ?s ?p ?o
   WHERE {
     ?s a dcat:Catalog.
     ?s dct:publisher ?pub.
   } GROUP BY ?s 
     HAVING (COUNT( ?s) > 1)
  }

UNION
# Rule_ID:10
 {
  #
  {SELECT ?s (dct:publisher as ?p) ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:publisher ?o.
      FILTER(!isURI(?o)).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 10).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:publisher should be a resource" ).
  LET (?Message := "The dct:publisher " + str(?o) + " is not a resource").
 }

UNION
# Rule_ID:11
{
  #
  {SELECT ?s (dct:publisher as ?p) ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:publisher ?o.
      FILTER(!EXISTS {?o a foaf:Agent}).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 11).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:publisher should be a foaf:Agent" ).
  LET (?Message := "The dct:publisher " + str(?o) + " is not a foaf:Agent").
 }

UNION
# Rule_ID:12
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s dct:title ?title})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
}
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 12).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:title is a required property for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " does not have a dct:title").
 }

UNION
# Rule_ID:13
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:title ?o.
      FILTER(!isLiteral(?o)).
      BIND(dct:title AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 13).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:title should be a literal" ).
  LET (?Message := "The dct:title " + str(?o) + " shoulb be literal").
 }
 
UNION
# Rule_ID:14
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s foaf:homepage ?homepage})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 14).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "foaf:homepage is a recommended property for Catalog" ).
  LET (?Message := "The dcat:Catalog " + str(?o) + " does not have a foaf:homepage").
}

UNION
# Rule_ID:15
{
  #
  {SELECT ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
    WHERE {
      ?s a dcat:Catalog.
      ?s foaf:homepage ?home.
    } GROUP BY ?s
      HAVING (COUNT( ?s) > 1)
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 15).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "foaf:homepage has maximum cardinality of 1 for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " as more than 1 foaf:homepage").
 }

UNION
# Rule_ID:16
{
  #
  {SELECT ?s (foaf:homepage as ?p) ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s foaf:homepage ?o.
      FILTER(!isURI(?o)).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 16).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "foaf:homepage should be a resource" ).
  LET (?Message := "The foaf:homeage " + str(?o) + " is not a resource").
 }
 
UNION
# Rule_ID:17
{
  #
  {SELECT ?s (foaf:homepage as ?p) ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s foaf:homepage ?o.
      ?o ?pred ?val.
      FILTER(!EXISTS {?o a foaf:Document}).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 17).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "foaf:homepage should be a foaf:Document" ).
  LET (?Message := "The foaf:homepage " + str(?o) + " is not a foaf:Document.").
 }

UNION
# Rule_ID:18
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!EXISTS {?s dct:language ?o.}).
      BIND(dct:language AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 18).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:language is a recommended property for Catalog" ).
  LET (?Message := "The dct:language " + str(?o) + " is not a property of Catalog.").
 }

UNION
# Rule_ID:19
 {
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:language ?o.
      FILTER(!isURI(?o)).
      BIND(dct:language AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 19).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:language should be a resource" ).
  LET (?Message := "The dct:language " + str(?o) + " is not a resource.").
 }

UNION
# Rule_ID:20
{
  #
  {SELECT ?s (dct:language as ?p) ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:language ?o.
      ?o ?pred ?val.
      FILTER(!EXISTS {?o a dct:LinguisticSystem}).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 20).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:language should be a dct:LinguisticSystem" ).
  LET (?Message := "The dct:language " + str(?o) + " is not a dct:LinguisticSystem.").
 }
 
UNION
# Rule_ID:21
 {
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s dct:license ?desc})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 21).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:license is a recommended property for Catalog" ).
  LET (?Message := "The dcat:Catalog " + str(?o) + " does not have dct:license.").
 }

UNION
# Rule_ID:22
{
  #
  {SELECT ?s ?p ?o 
      WHERE {
      ?s a dcat:Catalog.
      ?s dct:license ?o.
      FILTER(!isURI(?o)).
      BIND(dcat:accessURL AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 22).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:license should be a resource" ).
  LET (?Message := "The dct:license " + str(?o) + " is not a resource").
 }

UNION
# Rule_ID:23
{
  #
  {SELECT ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:license ?lic.
    } GROUP BY ?s 
      HAVING (COUNT( ?s) > 1)
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 23).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:license has a maximum cardinality of 1" ).
  LET (?Message := "The Catalog " + str(?o) + " has more than 1 dct:license").
 }

UNION
# Rule_ID:24
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s dct:issued ?desc})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 24).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:issued is a recommended property for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " does not have a dct:issued property").
 }

UNION
# Rule_ID:25
 {
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:issued ?o.
      FILTER(!isLiteral(?o)).
      BIND(dct:issued AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 25).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:issued should be literal" ).
  LET (?Message := "The dct:issue " + str(?o) + " is not literal").
 }

UNION
# Rule_ID:26
{
  #
  {SELECT ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:issued ?issued.
    } GROUP BY ?s 
	  HAVING (COUNT( ?s) > 1)
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 26).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:issued has maximum cardinality of 1 for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " has more than 1 dct:issued").
 }

UNION
# Rule_ID:27
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s dcat:themeTaxonomy ?taxonomy})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 27).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dcat:themeTaxonomy is a recommended property for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " does not have a dcat:themeTaxonomy property").
 }

UNION
# Rule_ID:28
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dcat:themeTaxonomy ?o.
      FILTER(!isIRI(?o)).
      BIND(dcat:themeTaxonomy AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 28).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dcat:themeTaxonomy should be a resource" ).
  LET (?Message := "The dcat:themeTaxonomy " + str(?o) + " is not a resource.").
 }

UNION
# Rule_ID:29
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dcat:record ?o.
      FILTER(!isIRI(?o)).
      BIND(dcat:themeTaxonomy AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 29).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dcat:catalogRecord should be a resource" ).
  LET (?Message := "The dcat:catalogRecordy " + str(?o) + " is not a resource.").
 }

UNION
# Rule_ID:30
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dcat:record ?o.
      ?o ?pred ?val.
      FILTER(!EXISTS {?o a dcat:CatalogRecord}).
      BIND(dcat:themeTaxonomy AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 30).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dcat:catalogRecord should be a CatalogRecord" ).
  LET (?Message := "The dcat:catalogRecord " + str(?o) + " is not a CatalogRecord.").
 }

UNION
# Rule_ID:31
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      FILTER(!(EXISTS { ?s dct:modified ?desc})).
      BIND(rdf:type AS ?p).
      BIND(dcat:Catalog AS ?o).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 31).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:modified is a recommended property for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " does not have a dct:modified property.").
 }

UNION
# Rule_ID:32
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:modified ?o.
      FILTER(!isLiteral(?o)).
      BIND(dct:modified AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 32).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:modified should be a literal" ).
  LET (?Message := "The dct:modified " + str(?o) + " is not a literal").
 }

UNION
# Rule_ID:33
{
  #
  {SELECT ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:modified ?modified.
    } GROUP BY ?s 
	  HAVING (COUNT( ?s) > 1)
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 33).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:modified has maximum cardinality of 1 for Catalog" ).
  LET (?Message := "The Catalog " + str(?o) + " has more than 1 dct:modified").
 }

UNION
# Rule_ID:34
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:rights ?o.
      FILTER(!isURI(?o)).
      BIND(dct:rights AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 34).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:rights should be a resource" ).
  LET (?Message := "The dct:rights " + str(?o) + " is not a resource").
 }
 
UNION
# Rule_ID:35
{
  #
  {SELECT ?s (rdf:type AS ?p) (dcat:Catalog AS ?o)
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:rights ?rights.
    } GROUP BY ?s 
	  HAVING (COUNT( ?s) > 1)
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 35).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:rights has maximum cardinality of 1 for Catalog" ).
  LET (?Message := "The dcat:Catalog " + str(?o) + " has more than 1 dct:rights").
 }

UNION
# Rule_ID:36
{
  #
  {SELECT ?s ?p ?o 
    WHERE {
      ?s a dcat:Catalog.
      ?s dct:spatial ?o.
      FILTER(!isURI(?o)).
      BIND(dct:spatial AS ?p).
    }
  }
  LET (?Rule_Origin := "DCAT-AP").
  LET (?Rule_ID := 36).
  LET (?Rule_Severity := "error").
  LET (?Rule_Description := "dct:spatial should be a resource" ).
  LET (?Message := "The dct:spatial " + str(?o) + " is not a resource").
 }
}