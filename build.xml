<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="./build.xsl"?>

<project name="DCAT-AP validator" default="main" basedir=".">

	<property name="pages.dir" value="pages"/>
	<property name="js.dir" value="${pages.dir}/js"/>
	<property name="jsdoc.dir" value="jsdoc"/>
	<property name="jsdoc.home" value="${jsdoc.dir}/jsdoc3"/>
	<property name="rules.dir" value="rules"/>
	<property name="sparql-doc.dir" value="sparql-doc"/>
	<property name="tests.dir" value="tests"/>
	<property name="tests-execution.dir" value="tests-execution"/>
	<property name="tests-data.dir" value="tests-data"/>
	<property name="tests.name" value="test-rule-"/>
	<property name="jslint.dir" value="jslint"/>
	<property name="csslint.dir" value="csslint"/>
	<property name="fuseki.dir" value="C:/Users/stanie/Documents/jena-fuseki1-1.1.2/"/>
	<property name="fuseki-pages.dir" value="${fuseki.dir}/pages/"/>
	<property name="fuseki.host" value="localhost"/>
	<property name="fuseki.port" value="3030"/>
	<property name="fuseki.page" value="dcat-ap_validator.html"/>
	<property name="fuseki.endpoint" value="dcat-ap_validator"/>
	
	<target name="main" depends="jslint,csslint,jsdoc,sparql-doc,kill-fuseki,deploy,start-fuseki,test"/>

	<taskdef name="jslint" classname="com.googlecode.jslint4java.ant.JSLintTask" classpath="${jslint.dir}/jslint4java-2.0.5.jar" />

	<target name="jslint" description="It invokes jslint4java to evaluate the dcat-ap_validator.js file.">
		<jslint haltOnFailure="false" options="sloppy">
			<predef>window,ActiveXObject,XMLHttpRequest,FormData,Blob,alert,document,casper,DOMParser,$</predef>
			<formatter type="xml" destfile="${jslint.dir}/jslint.xml"/>
			<fileset dir="${js.dir}" includes="*.js" />
			<fileset dir="${tests.dir}" includes="*.js"/>
		</jslint>
	</target>

	<target name="csslint">
		<apply executable="java" failonerror="true" parallel="true" output="${csslint.dir}/csslint.xml">
			<fileset dir="${pages.dir}/css" includes="*.css" />
			<arg line="-jar"/>
			<arg path="${csslint.dir}/js-1.7.6.jar"/>
			<arg path="${csslint.dir}/csslint-rhino.js" />      
			<arg line="--format=lint-xml"/>
			<srcfile/>
		</apply>
	</target>

	<taskdef name="jsdoc" classname="net.jannon.ant.tasks.JsDoc3" classpath="${jsdoc.dir}/jsdoc3-ant-task-1.0.jar:${jsdoc.home}/lib/js.jar"/>
	
	<target name="jsdoc">
		<jsdoc jsdochome="${jsdoc.home}" to="${jsdoc.dir}/output" dir="${js.dir}" />
	</target>

	<target name="clean" description="It deletes the sparql-doc and tests-execution directories in order to be updated with a new version.">
		<delete dir="${sparql-doc.dir}"/>
		<delete dir="${tests-execution.dir}"/>
	</target>

	<target name="create" depends="clean" description="It creates the sparq-doc and tests-execution directories.">
		<mkdir dir="${sparql-doc.dir}"/>
		<mkdir dir="${tests-execution.dir}"/>
	</target>

	<target name="sparql-doc" depends="create" description="It executes the sparq-doc command.">
		<exec executable="cmd.exe" failonerror="true">
			<arg value="/c"/>
			<arg line="sparql-doc ${rules.dir} ${sparql-doc.dir}"/>
		</exec>
	</target>

	<target name="kill-fuseki" description="It kills the Fuseki server.">
		<exec executable="cmd.exe">
			<arg value="/c"/>
			<arg value="kill-fuseki.bat ${fuseki.port}"/>
		</exec>
	</target>

	<target name="deploy" description="It deploys (copy) the DCAT-AP validator with documentation on the Fuseki server.">
		<copy todir="${fuseki-pages.dir}">
			<fileset dir="${pages.dir}"/>
		</copy>
		<copy todir="${fuseki-pages.dir}">
			<fileset dir=".">
				<include name="${sparql-doc.dir}/**"/>
			</fileset>
		</copy>
	</target>

	<target name="start-fuseki" description="It executes the Fuseki server.">
		<exec executable="cmd.exe" spawn="true">
			<arg value="/c"/>
			<arg line="java -jar ${fuseki.dir}/fuseki-server.jar --update --port=${fuseki.port} --pages ${fuseki-pages.dir} --mem /${fuseki.endpoint}"/>
		</exec>
	</target>

	<target name="test" description="It tests with casperjs all the rules.">
		<exec executable="cmd.exe">
			<arg value="/c"/>
			<arg line="casperjs test ${tests.dir}/ --testname=${tests.name} --url=http://${fuseki.host}:${fuseki.port} --page=${fuseki.page} --endpoint=${fuseki.endpoint} --output=${tests-execution.dir} --testdata=${tests-data.dir} --xunit=${tests-execution.dir}/xunit.xml"/>
		</exec>
	</target>
</project>